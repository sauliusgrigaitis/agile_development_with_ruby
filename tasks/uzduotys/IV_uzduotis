Tiksas - įsisavinti:
  (a) Kodo, parašyto naudojant elgsena paremtą programamavimą, pertvarkymą
  (b) "Stub" ir "Mock" mechanizmus 
  (c) Testinių duomenų paruošimo būdus

Užduotis:
  1) Pertvarkyti I užduoties programą į "Ruby on Rails" programa. T.y. nekeičiant funkcionalumo esybių klasės turi būti pertvarkytos "ActiveRecord" klases. Testai taip pat turi būti pervarkyti. Turėtų būti kaip galima mažiau pakeitimų kode, neturėtų pasikeisti sistemos funkcionalumas, t.y. "spec'ų" anraštės turėtų išlikti tokios pačios.
Reikalavimai:
  1) Tikslingai panaudoti bent po 2 "Stub'us" ir "Mock'us".
  2) Turi būti panaudotos "ActiveRecord" sąvybės ten kur jos tinka ( pvz. validatoriai: http://api.rubyonrails.org/classes/ActiveRecord/Validations/ClassMethods.html , asociacijos: http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html ir kt.)
  3) Pasirinkti vieną iš testinių duomenų paruošimo būdų ir pertvarkyti testus, kad jie testiniams duomenims paruošti naudotų pasirinktą būdą (pvz. Fixtures: http://api.rubyonrails.org/classes/Fixtures.html )
  4) Vartotojo sąsaja šiai užduočiai nereikalinga
  5) Naudojama ankstesnėse užduotyse padaryta programa
  6) Naudojama Rails 4.2, Ruby 2.2, RSpec 3.3
  7) Kodas turi būti 100% padengtas testais (jei padengimas yra mažesnis - jis turi būti motyvuotas). Padengimui patikrinti naudojamas SimpleCov. 
  8) Reikia panaudoti RuboCop įrankį kartu su [rubocop-rspec](https://github.com/backus/rubocop-rspec) ir pademonstruoti kodo atitikimą "Ruby Style Guide". Reikia naudoti standartinę RuboCop konfigūraciją.
  9) Reikia panaudoti Reek įrankį ir pademonstruoti, kad kodas neturi tipinių simptomų. Reikia naudoti standartinę Reek konfigūraciją.
  10) Reikia pademonstruoti aukštą testų kokybę Mutant įrankio pagalba.

Pastabos:
Visi reikalavimai turi būti išpildyti prasmingai, o ne tik tam, kad patenkinti formalų reikalavimą.

Įvertinimas: 1.5 balo
